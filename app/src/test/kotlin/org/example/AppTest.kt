/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import org.junit.jupiter.api.Test
import org.junit.jupiter.api.Assertions.assertNotNull
import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Assertions.assertNotEquals

class AppTest {
    @Test
    fun appHasAGreeting() {
        val classUnderTest = App()
        assertNotNull(classUnderTest.greeting, "app should have a greeting")
    }

    @Test
    fun getGameBoard(){
        val game = Game()
        val board = game.getBoard()
        assertNotNull(board)

        for (row in board) {
            assertNotNull(row)
        }
    }

    @Test
    fun gameHasScore() {
        val game = Game()
        assertEquals(game.getScore(), 0)
    }
    
    @Test
    fun makeMoveUp() {
        val game = Game()
        val action = Direction.UP
        val board = game.getBoard()
        val deepCopy = board.map { it.toMutableList()}
        game.move(action)
        assertNotEquals(board, deepCopy)
    }

    @Test
    fun makeMoveDown() {
        val game = Game()
        val action = Direction.DOWN
        val board = game.getBoard()
        val deepCopy = board.map { it.toMutableList()}
        game.move(action)
        assertNotEquals(board, deepCopy)

    }

    @Test
    fun makeMoveLeft() {
        val game = Game()
        val action = Direction.LEFT
        val board = game.getBoard()
        val deepCopy = board.map { it.toMutableList()}
        game.move(action)
        assertNotEquals(board, deepCopy)

    }

    @Test
    fun makeMoveRight() {
        val game = Game()
        val action = Direction.RIGHT
        val board = game.getBoard()
        val deepCopy = board.map { it.toMutableList()}
        game.move(action)
        assertNotEquals(board, deepCopy)

    }
 
}
